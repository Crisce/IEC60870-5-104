[{"id":"3fc1394b.c02cc6","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"c9fba183.aa30a","type":"tcp request","z":"3fc1394b.c02cc6","server":"192.168.1.117","port":"2404","out":"sit","splitc":" ","name":"","x":550,"y":400,"wires":[["e6248b43.570248"]]},{"id":"c1aacebd.d8378","type":"inject","z":"3fc1394b.c02cc6","name":"START_DT","topic":"","payload":"START","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":130,"y":200,"wires":[["e6248b43.570248"]]},{"id":"71944c4d.b1d8d4","type":"inject","z":"3fc1394b.c02cc6","name":"INTERROGATION_COMMAND","topic":"","payload":"IC","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":190,"y":320,"wires":[["e6248b43.570248"]]},{"id":"7f818ab6.0b6944","type":"debug","z":"3fc1394b.c02cc6","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":810,"y":100,"wires":[]},{"id":"e6248b43.570248","type":"function","z":"3fc1394b.c02cc6","name":"IEC60870-5-104 MASTER","func":"if(context.global.sequenceRx===null) context.global.sequenceRx=0;\nif(context.global.sequenceTx===null) context.global.sequenceTx=0;\nif(context.global.dataTransfer===null) context.global.dataTransfer=false;\nvar bufferIn=[];\nvar bufferOut=[];\n\nif(msg.payload==\"START\") \n{\n    context.global.sequenceRx=0;\n    context.global.sequenceTx=0;\n    bufferOut = [104,4,7,0,0,0];\n}\nelse if(msg.payload==\"STOP\")\n{\n    bufferOut = [104,4,19,0,0,0];\n}\nelse if(msg.payload==\"TEST\")\n{\n    bufferOut = [104,4,67,0,0,0];\n}\nelse if(msg.payload == \"IC\")\n{\n    bufferOut = [104, 14, 0, 0, 0, 0, 100, 1, 6, 0, 255, 255, 0, 0, 0, 20];\n}\nelse\n{\n    for(var x=2; x<msg.payload.length; x++) bufferIn.push(msg.payload[x]);\n\n  if (!bitRead(bufferIn[0], 0)) //I-FORMAT\n  {\n    var i = 0;\n    context.global.sequenceRx++; //Incremento il contatore dei messaggi ricevuti\n    var type = bufferIn[4];\n    var ca = bufferIn[8] | bufferIn[9] << 8;\n    var count = bufferIn[5] & 127;\n    var SQ = bitRead(bufferIn[5], 7);\n    var cot = bufferIn[6] & 63;\n    var PN = bitRead(bufferIn[6], 6);\n    var T = bitRead(bufferIn[6], 7);\n\n    //M_SP_NA_1 Single Point information //C_SC_NA_1 Single command //C_DC_NA_1 Double command\n    if (type == 1 || type == 45 || type == 46)\n    {\n      for (var h = 0; h < count; h++)\n      {\n        var ioa = bufferIn[10 + (h * 4)] | bufferIn[11 + (h * 4)] << 8 | bufferIn[12 + (h * 4)] << 16;\n        var val = bufferIn[13 + (h * 4)];      \n        //bufferTag[bufferCount][0] = type;\n        //bufferTag[bufferCount][1] = ca;\n        //bufferTag[bufferCount][2] = ioa;\n        //bufferTag[bufferCount][3] = val;\n        //bufferCount++;\n      }\n      inviaS(); //S-FORMAT\n    }\n    else if (type == 0x09) //M_ME_NA_1 Measured value, normalised value\n    {\n      for (h = 0; h < count; h++)\n      {\n        ioa = bufferIn[10 + (h * 6)] | bufferIn[11 + (h * 6)] << 8 | bufferIn[12 + (h * 6)] << 16;\n        val = bufferIn[13 + (h * 6)] | bufferIn[14 + (h * 6)] << 8 | bufferIn[15 + (h * 6)] << 16;      \n        //bufferTag[bufferCount][0] = type;\n        //bufferTag[bufferCount][1] = ca;\n        //bufferTag[bufferCount][2] = ioa;\n        //bufferTag[bufferCount][3] = val;\n        //bufferCount++;\n        var norm = 0.0;\n        norm = val / 32767;\n        var out2 = { type:String(type), ca:String(ca), ioa:String(ioa), value:String(norm) };\n        node.send([null,out2]);\n      }\n      inviaS(); //S-FORMAT\n    }\n    else if (type == 0x64) //C_IC_NA_1 Interrogation command\n    {\n      var msg2 = [0x00, 0x64, 0x01, 0x07, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x14];\n      //inviaI(msg2);\n    }\n    else if (type == 0x65) //C_CI_NA_1 Counter interrogation command\n    {\n      inviaS(); //S-FORMAT\n    }\n    else if (type == 0x67) //C_CS_NA_1 Clock synchronisation command\n    {\n      bufferIn[6] = 0x6E; // eIEC870_COT_FILE + P/N + T\n      inviaBuf(bufferIn, lunghezza);\n    }\n    else\n    {\n      inviaS(); //S-FORMAT\n    }\n  }\n  else if (bitRead(bufferIn[0], 0) && !bitRead(bufferIn[0], 1)) //S-FORMAT\n  {\n  }\n  else if (bitRead(bufferIn[0], 0) && bitRead(bufferIn[0], 1)) //U-FORMAT\n  {\n    if (bitRead(bufferIn[0], 2)) {\n      inviaU(0x0B);\n      dataTransfer=true;\n    }\n    else if (bitRead(bufferIn[0], 4)) {\n      inviaU(0x23);\n      dataTransfer=false;\n    }\n    else if (bitRead(bufferIn[0], 6)) inviaU(0x83); //Rispondo al TEST\n    else if (bufferIn[0] == 0x0B) {} //Risposta dal server START_DT\n    else if (bufferIn[0] == 0x23) {} //Risposta dal server STOP_DT\n    else if (bufferIn[0] == 0x83) {} //Risposta dal server TEST\n  }\n}\n\nfunction invia(type)\n{\n  var buffer = [0x00, 0x00, 0x00, 0x00, 0x64, 0x01, 0x06, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x14]; //Interrogation Command\n  if (type == C_IC_NA_1) inviaBuf(buffer, 14);\n  var msg3 = [0x00, 0x00, 0x00, 0x00, 0x46, 0x01, 0x04, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00]; //M_EI_NA_1 End of Initialisation\n  if (type == M_EI_NA_1) inviaBuf(msg,sizeof(msg));\n}\n\nfunction inviaBuf(buffer, lung)\n{\n  bufferOut.push(0x68); //Iniziatore di stringa\n  bufferOut.push(lung); //Lunghezza stringa (minimo 4)\n  for (var i = 0; i < lung; i++) bufferOut.push(buffer[i]);\n}\n\n//Invia il U-Format\nfunction inviaU(msg)\n{\n  var buf = [0,0,0,0];\n  buf[0] = msg; //I primi due BIT (alti) indicano l' U-Format\n  buf[1] = 0x00;\n  buf[2] = 0x00;\n  buf[3] = 0x00;\n  inviaBuf(buf, 4);\n}\n\n//Invia il S-Format (conferma messaggio)\nfunction inviaS()\n{\n  var buf = [0,0,0,0];\n  buf[0] = 0x01; //Il primo BIT indica l' S-Format\n  buf[1] = 0x00;\n  buf[2] = (context.global.sequenceRx << 1) & 255;\n  buf[3] = (context.global.sequenceRx >> 7) & 255;\n  inviaBuf(buf, 4);\n}\n\n/*function inviaI(buffer)\n{\n  var dim = buffer.lenght;\n  var buf;\n  for (var h=0; h < 4; h++) buf.push(0)\n  buf[0] = (global.sequenceTx << 1) | 1; //Il primo BIT indica l' S-Format\n  buf[1] = global.sequenceTx >> 7;\n  buf[2] = global.sequenceRx << 1;\n  buf[3] = global.sequenceRx >> 7;\n  for (var a = 0; a < dim; a++) buf.push(bufferOut[a]);\n  inviaBuf(buf, dim + 4);\n  sequenceTx++; //Incremento il contatore dei messaggi inviati\n}*/\nfunction bitRead(num,bit)\n{\n    return ((num & (1 << bit)) !== 0);\n}\n\nvar ehi = Buffer.from(bufferOut);\nvar out1 = { payload: ehi };\nreturn [out1, null];","outputs":2,"noerr":0,"x":540,"y":260,"wires":[["c9fba183.aa30a"],["eb0dadff.06d62"]]},{"id":"ace0353b.7ef7c8","type":"inject","z":"3fc1394b.c02cc6","name":"STOP_DT","topic":"","payload":"STOP","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120,"y":240,"wires":[["e6248b43.570248"]]},{"id":"b244deca.9a0e1","type":"range","z":"3fc1394b.c02cc6","minin":"0","maxin":"1","minout":"0","maxout":"100","action":"scale","round":false,"property":"value","name":"","x":670,"y":100,"wires":[["7f818ab6.0b6944"]]},{"id":"eb0dadff.06d62","type":"switch","z":"3fc1394b.c02cc6","name":"","property":"ioa","propertyType":"msg","rules":[{"t":"eq","v":"3","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":530,"y":100,"wires":[["b244deca.9a0e1"]]},{"id":"3337293e.5daac6","type":"inject","z":"3fc1394b.c02cc6","name":"TEST","topic":"","payload":"TEST","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":280,"wires":[["e6248b43.570248"]]},{"id":"4850bde6.d03ee4","type":"comment","z":"3fc1394b.c02cc6","name":"Esempio di lettura IOA","info":"Esempio","x":580,"y":60,"wires":[]},{"id":"20a851b3.83ef6e","type":"comment","z":"3fc1394b.c02cc6","name":"Comandi MASTER","info":"","x":130,"y":160,"wires":[]}]